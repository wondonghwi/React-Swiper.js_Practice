{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["SwiperCore","use","Autoplay","Navigation","Pagination","Scrollbar","A11y","App","className","spaceBetween","slidesPerView","loop","autoplay","delay","navigation","pagination","clickable","scrollbar","draggable","onSwiper","swiper","console","log","onSlideChange","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRAeAA,IAAWC,IAAI,CAACC,IAAUC,IAAYC,IAAYC,IAAWC,MA6B9CC,MA3Bf,WACE,OACE,eAAC,IAAD,CACEC,UAAU,mBACVC,aAAc,GACdC,cAAe,EACfC,MAAM,EACNC,SAAU,CACRC,MAAO,KAETC,YAAU,EACVC,WAAY,CAACC,WAAW,GACxBC,UAAW,CAACC,WAAW,GACvBC,SAAU,SAACC,GAAD,OAAYC,QAAQC,IAAIF,IAClCG,cAAe,kBAAMF,QAAQC,IAAI,iBAZnC,UAcE,cAAC,IAAD,uBACA,cAAC,IAAD,uBACA,cAAC,IAAD,uBACA,cAAC,IAAD,uBACA,cAAC,IAAD,uBACA,cAAC,IAAD,uBACA,cAAC,IAAD,2BC3BSE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e9667c78.chunk.js","sourcesContent":["import {Swiper, SwiperSlide} from \"swiper/react\";\nimport SwiperCore, {\n  Autoplay,\n  Navigation,\n  Pagination,\n  Scrollbar,\n  A11y\n} from \"swiper\";\n\n//style\nimport \"swiper/swiper.scss\";\nimport \"swiper/components/navigation/navigation.scss\";\nimport \"swiper/components/pagination/pagination.scss\";\nimport \"swiper/components/scrollbar/scrollbar.scss\";\n\nSwiperCore.use([Autoplay, Navigation, Pagination, Scrollbar, A11y]);\n\nfunction App() {\n  return (\n    <Swiper\n      className='swiper-container'\n      spaceBetween={30}\n      slidesPerView={3}\n      loop={true}\n      autoplay={{\n        delay: 3000,\n      }}\n      navigation\n      pagination={{clickable: true}}\n      scrollbar={{draggable: true}}\n      onSwiper={(swiper) => console.log(swiper)}\n      onSlideChange={() => console.log(\"slide change\")}\n    >\n      <SwiperSlide> slide1 </SwiperSlide>\n      <SwiperSlide> slide2 </SwiperSlide>\n      <SwiperSlide> slide3 </SwiperSlide>\n      <SwiperSlide> slide4 </SwiperSlide>\n      <SwiperSlide> slide5 </SwiperSlide>\n      <SwiperSlide> slide6 </SwiperSlide>\n      <SwiperSlide> slide7 </SwiperSlide>\n    </Swiper>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}